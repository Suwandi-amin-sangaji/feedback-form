{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      stars: [{\n        id: 1\n      }, {\n        id: 2\n      }, {\n        id: 3\n      }, {\n        id: 4\n      }, {\n        id: 5\n      }],\n      selectedRating: null,\n      feedback: {\n        rating: null,\n        comments: ''\n      },\n      showSuccessAlert: false,\n      showModal: false\n    };\n  },\n  methods: {\n    setRating(rating) {\n      this.selectedRating = rating;\n      this.feedback.rating = rating; // Update feedback rating\n    },\n    showFeedbackForm() {\n      this.showModal = true;\n    },\n    async submitFeedback() {\n      if (!this.feedback.rating) {\n        alert('Please select a rating before submitting.');\n        return;\n      }\n      try {\n        const response = await fetch('/api/feedback/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.feedback)\n        });\n        if (response.ok) {\n          this.showSuccessAlert = true;\n          this.selectedRating = null;\n          this.feedback.comments = ''; // Clear comments after submission\n          this.showModal = false; // Close modal after submission\n        } else {\n          throw new Error('Failed to submit feedback');\n        }\n      } catch (error) {\n        console.error('Error submitting feedback:', error);\n        // Handle error state in your UI\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedRating = null; // Reset selected rating if modal is closed\n    }\n  }\n};","map":{"version":3,"names":["name","data","stars","id","selectedRating","feedback","rating","comments","showSuccessAlert","showModal","methods","setRating","showFeedbackForm","submitFeedback","alert","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","closeModal"],"sources":["/home/wandy/Documents/Technical/frontend/feedback-form/src/components/FeedbackForm.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"survey-container\">\n      <h1>How would you rate your satisfaction with our product?</h1>\n      <div class=\"rating-system\">\n        <div \n          v-for=\"star in stars\" \n          :key=\"star.id\" \n          class=\"star-container\"\n        >\n          <span \n            class=\"star\" \n            @click=\"setRating(star.id)\"\n            :class=\"{ 'rated': star.id <= selectedRating }\"\n          >\n            &#9733;\n          </span>\n        </div>\n      </div>\n      <div class=\"rating-range\" v-if=\"selectedRating !== null\">\n        <span>Very Dissatisfied</span>\n        <span>Very Satisfied</span>\n      </div>\n      <button @click=\"showFeedbackForm\">Give Feedback</button>\n    </div>\n\n    <!-- Feedback Form Modal -->\n    <div class=\"modal\" v-if=\"showModal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        <h2>Feedback Form</h2>\n        <form @submit.prevent=\"submitFeedback\">\n          <label>\n            Rating:\n            <span v-for=\"star in 5\" :key=\"star\" @click=\"setRating(star)\">\n              <span :class=\"{ 'rated': star <= selectedRating }\">&#9733;</span>\n            </span>\n          </label>\n          <label>\n            Comments:\n            <textarea v-model=\"feedback.comments\" placeholder=\"Your comments...\"></textarea>\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n\n    <!-- Success alert -->\n    <div v-if=\"showSuccessAlert\" class=\"success-alert\">\n      <p>Feedback submitted successfully!</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      stars: [\n        { id: 1 },\n        { id: 2 },\n        { id: 3 },\n        { id: 4 },\n        { id: 5 },\n      ],\n      selectedRating: null,\n      feedback: {\n        rating: null,\n        comments: ''\n      },\n      showSuccessAlert: false,\n      showModal: false,\n    };\n  },\n  methods: {\n    setRating(rating) {\n      this.selectedRating = rating;\n      this.feedback.rating = rating; // Update feedback rating\n    },\n    showFeedbackForm() {\n      this.showModal = true;\n    },\n    async submitFeedback() {\n      if (!this.feedback.rating) {\n        alert('Please select a rating before submitting.');\n        return;\n      }\n\n      try {\n        const response = await fetch('/api/feedback/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(this.feedback),\n        });\n\n        if (response.ok) {\n          this.showSuccessAlert = true;\n          this.selectedRating = null;\n          this.feedback.comments = ''; // Clear comments after submission\n          this.showModal = false; // Close modal after submission\n        } else {\n          throw new Error('Failed to submit feedback');\n        }\n      } catch (error) {\n        console.error('Error submitting feedback:', error);\n        // Handle error state in your UI\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedRating = null; // Reset selected rating if modal is closed\n    },\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  color: #2c3e50;\n}\n\n.survey-container {\n  width: 600px;\n  margin: 0 auto;\n}\n\n.rating-system {\n  display: flex;\n  justify-content: space-between;\n}\n\n.star-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.star {\n  font-size: 2em;\n  cursor: pointer;\n  transition: color 0.3s;\n}\n\n.star:hover,\n.rated {\n  color: gold;\n}\n\n.rating-range {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  font-size: 14px;\n  color: #888;\n}\n\nbutton {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.success-alert {\n  position: fixed;\n  z-index: 1;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #4caf50;\n  color: white;\n  padding: 20px;\n  border-radius: 5px;\n}\n\n.modal {\n  display: none;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n  max-width: 400px;\n  text-align: center;\n  border-radius: 5px;\n  position: relative;\n}\n\n.close {\n  position: absolute;\n  top: 0;\n  right: 10px;\n  font-size: 28px;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"AAuDA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE;MAAE,CAAC,EACT;QAAEA,EAAE,EAAE;MAAE,CAAC,EACT;QAAEA,EAAE,EAAE;MAAE,CAAC,EACT;QAAEA,EAAE,EAAE;MAAE,CAAC,EACT;QAAEA,EAAE,EAAE;MAAE,CAAC,CACV;MACDC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE;QACRC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,gBAAgB,EAAE,KAAK;MACvBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACL,MAAM,EAAE;MAChB,IAAI,CAACF,cAAa,GAAIE,MAAM;MAC5B,IAAI,CAACD,QAAQ,CAACC,MAAK,GAAIA,MAAM,EAAE;IACjC,CAAC;IACDM,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACH,SAAQ,GAAI,IAAI;IACvB,CAAC;IACD,MAAMI,cAAcA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACR,QAAQ,CAACC,MAAM,EAAE;QACzBQ,KAAK,CAAC,2CAA2C,CAAC;QAClD;MACF;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,gBAAgB,EAAE;UAC7CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,QAAQ;QACpC,CAAC,CAAC;QAEF,IAAIU,QAAQ,CAACO,EAAE,EAAE;UACf,IAAI,CAACd,gBAAe,GAAI,IAAI;UAC5B,IAAI,CAACJ,cAAa,GAAI,IAAI;UAC1B,IAAI,CAACC,QAAQ,CAACE,QAAO,GAAI,EAAE,EAAE;UAC7B,IAAI,CAACE,SAAQ,GAAI,KAAK,EAAE;QAC1B,OAAO;UACL,MAAM,IAAIc,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;MACF;IACF,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,IAAI,CAACjB,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACL,cAAa,GAAI,IAAI,EAAE;IAC9B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}