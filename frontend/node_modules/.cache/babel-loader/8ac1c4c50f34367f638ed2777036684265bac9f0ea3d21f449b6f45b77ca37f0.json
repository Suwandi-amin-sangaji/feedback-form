{"ast":null,"code":"export default {\n  data() {\n    return {\n      showForm: false,\n      showSuccessAlert: false,\n      feedback: {\n        rating: null,\n        comments: \"\"\n      }\n    };\n  },\n  methods: {\n    async submitFeedback() {\n      try {\n        const response = await fetch(\"/api/feedback/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(this.feedback)\n        });\n        const data = await response.json();\n        console.log(\"Feedback submitted:\", data);\n\n        // Show success alert\n        this.showSuccessAlert = true;\n\n        // Reset form fields after successful submission\n        this.feedback.rating = null;\n        this.feedback.comments = \"\";\n\n        // Hide form after submission (optional)\n        this.showForm = false;\n      } catch (error) {\n        console.error(\"Error submitting feedback:\", error);\n        // Handle error state in your UI\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","showForm","showSuccessAlert","feedback","rating","comments","methods","submitFeedback","response","fetch","method","headers","body","JSON","stringify","json","console","log","error"],"sources":["/home/wandy/Documents/Technical/frontend/feedback-form/src/components/FeedbackForm.vue"],"sourcesContent":["<template>\n  <div class=\"feedback-container\">\n    <button @click=\"showForm = true\">Give Feedback</button>\n\n    <div v-if=\"showForm\" class=\"feedback-modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"showForm = false\">&times;</span>\n        <h2>How would you rate your satisfaction with our product?</h2>\n        <form @submit.prevent=\"submitFeedback\">\n          <label>\n            Rating:\n            <select v-model=\"feedback.rating\">\n              <option v-for=\"n in 5\" :key=\"n\" :value=\"n\">{{ n }}</option>\n            </select>\n          </label>\n          <label>\n            Comments:\n            <textarea v-model=\"feedback.comments\"></textarea>\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n\n    <div v-if=\"showSuccessAlert\" class=\"success-alert\">\n      <span class=\"close\" @click=\"showSuccessAlert = false\">&times;</span>\n      <p>Feedback submitted successfully!</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      showForm: false,\n      showSuccessAlert: false,\n      feedback: {\n        rating: null,\n        comments: \"\"\n      }\n    };\n  },\n  methods: {\n    async submitFeedback() {\n      try {\n        const response = await fetch(\"/api/feedback/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(this.feedback)\n        });\n        const data = await response.json();\n        console.log(\"Feedback submitted:\", data);\n\n        // Show success alert\n        this.showSuccessAlert = true;\n\n        // Reset form fields after successful submission\n        this.feedback.rating = null;\n        this.feedback.comments = \"\";\n\n        // Hide form after submission (optional)\n        this.showForm = false;\n      } catch (error) {\n        console.error(\"Error submitting feedback:\", error);\n        // Handle error state in your UI\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.feedback-container {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.feedback-modal {\n  display: block;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0,0,0,0.4);\n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 10% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n}\n\n.close {\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.success-alert {\n  position: fixed;\n  z-index: 1;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #4CAF50;\n  color: white;\n  padding: 20px;\n  border-radius: 5px;\n}\n\n.success-alert .close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 10px;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"AAgCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,KAAK;MACfC,gBAAgB,EAAE,KAAK;MACvBC,QAAQ,EAAE;QACRC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,gBAAgB,EAAE;UAC7CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,QAAQ;QACpC,CAAC,CAAC;QACF,MAAMH,IAAG,GAAI,MAAMQ,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEjB,IAAI,CAAC;;QAExC;QACA,IAAI,CAACE,gBAAe,GAAI,IAAI;;QAE5B;QACA,IAAI,CAACC,QAAQ,CAACC,MAAK,GAAI,IAAI;QAC3B,IAAI,CAACD,QAAQ,CAACE,QAAO,GAAI,EAAE;;QAE3B;QACA,IAAI,CAACJ,QAAO,GAAI,KAAK;MACvB,EAAE,OAAOiB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}