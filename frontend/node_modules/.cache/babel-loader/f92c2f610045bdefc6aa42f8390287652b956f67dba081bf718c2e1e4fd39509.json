{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      stars: [{\n        id: 1\n      }, {\n        id: 2\n      }, {\n        id: 3\n      }, {\n        id: 4\n      }, {\n        id: 5\n      }],\n      selectedRating: null,\n      showModal: true // Set to true to show the modal on page load\n    };\n  },\n  methods: {\n    setRating(rating) {\n      this.selectedRating = rating;\n    },\n    async submitFeedback() {\n      if (!this.selectedRating) {\n        alert('Please select a rating before submitting.');\n        return;\n      }\n      const feedbackData = {\n        rating: this.selectedRating,\n        comments: '' // You can add comments field if needed\n      };\n      try {\n        const response = await fetch('/api/feedback/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(feedbackData)\n        });\n        if (response.ok) {\n          this.showModal = false; // Hide modal on successful submission\n        } else {\n          throw new Error('Failed to submit feedback');\n        }\n      } catch (error) {\n        console.error('Error submitting feedback:', error);\n        // Handle error state in your UI\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n    }\n  }\n};","map":{"version":3,"names":["name","data","stars","id","selectedRating","showModal","methods","setRating","rating","submitFeedback","alert","feedbackData","comments","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","closeModal"],"sources":["/home/wandy/Documents/Technical/frontend/feedback-form/src/components/FeedbackForm.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Rating Popup Modal -->\n    <div v-if=\"showModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        \n        <!-- Rating Slider -->\n      <div class=\"mb-6\">\n        <label for=\"ratingSlider\" class=\"block text-sm font-medium text-gray-700\"></label>\n        <input\n          type=\"range\"\n          id=\"ratingSlider\"\n          v-model=\"selectedRating\"\n          min=\"1\"\n          max=\"5\"\n          class=\"w-full appearance-none bg-gray-200 h-2 rounded-full outline-none\"\n          @input=\"setRating(selectedRating)\"\n          style=\"background: linear-gradient(to right, blue, blue calc((var(--rating) - 1) * 25% + 1 * 2));\"\n        >\n      </div>\n        \n        <h2 class=\"modal-title text-xl font-semibold mb-4\">How would you rate your satisfaction with our product?</h2>\n        \n        <!-- Star Rating System -->\n        <div class=\"rating-system\">\n          <div \n            v-for=\"star in stars\" \n            :key=\"star.id\" \n            class=\"star-container\"\n          >\n            <span \n              class=\"star\" \n              @click=\"setRating(star.id)\"\n              :class=\"{ 'rated': star.id <= selectedRating }\"\n            >\n              &#9733;\n            </span>\n          </div>\n          \n        </div>\n\n        <div class=\"flex ml-6 mr-6\">\n      <span class=\"text-xs text-gray-600\">Very Dissatisfied</span>\n      <span class=\"text-xs text-gray-600\">Very Satisfied</span>\n    </div>\n\n        <!-- Submit Button -->\n        <button @click=\"submitFeedback\" class=\"btn-submit mt-4\">Submit</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      stars: [\n        { id: 1 },\n        { id: 2 },\n        { id: 3 },\n        { id: 4 },\n        { id: 5 },\n      ],\n      selectedRating: null,\n      showModal: true, // Set to true to show the modal on page load\n    };\n  },\n  methods: {\n    setRating(rating) {\n      this.selectedRating = rating;\n    },\n    async submitFeedback() {\n      if (!this.selectedRating) {\n        alert('Please select a rating before submitting.');\n        return;\n      }\n\n      const feedbackData = {\n        rating: this.selectedRating,\n        comments: '', // You can add comments field if needed\n      };\n\n      try {\n        const response = await fetch('/api/feedback/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(feedbackData),\n        });\n\n        if (response.ok) {\n          this.showModal = false; // Hide modal on successful submission\n        } else {\n          throw new Error('Failed to submit feedback');\n        }\n      } catch (error) {\n        console.error('Error submitting feedback:', error);\n        // Handle error state in your UI\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n  },\n};\n</script>\n<style scoped>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  color: #2c3e50;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n.modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(185, 185, 185, 0.4);\n}\n\n.modal-content {\n  background-color: #fefefe;\n  padding: 40px;\n  border: 1px solid #888;\n  width: 100%;\n  max-width: 500px;\n  text-align: left;\n  border-radius: 10px;\n  position: relative;\n}\n\n.close {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  cursor: pointer;\n  color: #aaa;\n}\n\n.modal-title {\n  font-size: 1.5em;\n  margin-bottom: 20px;\n}\n\n.rating-system {\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  margin-top: 20px;\n}\n\n.star-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.star {\n  font-size: 4em;\n  cursor: pointer;\n  transition: color 0.3s;\n  color: #a5a5a5; /* Warna bintang putih */\n}\n\n.star:hover,\n.rated {\n  color: #6e7271;\n}\n\n.btn-submit {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  margin-top: 20px;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n}\n\n.btn-submit:hover {\n  background-color: #45a049;\n}\n\n\n.rating-range {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n  font-size: 14px;\n  color: #888;\n  appearance: none;\n  width: 100%;\n  height: 8px;\n}\n\n.rating-line {\n  appearance: none;\n  width: 100%;\n  height: 8px;\n  background-color: #ccc;\n  position: absolute;\n  top: -10px;\n  left: 0;\n}\n\n.flex {\n    display: flex;\n    margin-top: 20px;\n    justify-content: space-between;\n  }\n\n  .ml-6 {\n    margin-left: 6px;\n  }\n\n  .mr-6 {\n    margin-right: 6px;\n  }\n</style>\n"],"mappings":"AAuDA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE;MAAE,CAAC,EACT;QAAEA,EAAE,EAAE;MAAE,CAAC,EACT;QAAEA,EAAE,EAAE;MAAE,CAAC,EACT;QAAEA,EAAE,EAAE;MAAE,CAAC,EACT;QAAEA,EAAE,EAAE;MAAE,CAAC,CACV;MACDC,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAE,IAAI,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,MAAM,EAAE;MAChB,IAAI,CAACJ,cAAa,GAAII,MAAM;IAC9B,CAAC;IACD,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACL,cAAc,EAAE;QACxBM,KAAK,CAAC,2CAA2C,CAAC;QAClD;MACF;MAEA,MAAMC,YAAW,GAAI;QACnBH,MAAM,EAAE,IAAI,CAACJ,cAAc;QAC3BQ,QAAQ,EAAE,EAAE,CAAE;MAChB,CAAC;MAED,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,gBAAgB,EAAE;UAC7CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,YAAY;QACnC,CAAC,CAAC;QAEF,IAAIE,QAAQ,CAACO,EAAE,EAAE;UACf,IAAI,CAACf,SAAQ,GAAI,KAAK,EAAE;QAC1B,OAAO;UACL,MAAM,IAAIgB,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;MACF;IACF,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,IAAI,CAACnB,SAAQ,GAAI,KAAK;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}