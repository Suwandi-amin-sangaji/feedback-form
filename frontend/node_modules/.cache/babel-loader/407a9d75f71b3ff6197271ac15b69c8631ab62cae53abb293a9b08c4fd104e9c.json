{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3e62ccce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"How would you rate your satisfaction with our product?\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  style: {\n    \"font-size\": \"14px\",\n    \"color\": \"#888\"\n  }\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 1,\n  class: \"success-alert\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Feedback submitted successfully!\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showModal = true)\n  }, \"Give Feedback\"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"×\"), _hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitFeedback && $options.submitFeedback(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"label\", null, [_createTextVNode(\" Rating: \"), (_openBlock(), _createElementBlock(_Fragment, null, _renderList(5, star => {\n    return _createElementVNode(\"span\", {\n      key: star,\n      onClick: $event => $options.setRating(star),\n      class: _normalizeClass({\n        'rated': star <= $data.selectedRating\n      }),\n      style: {\n        \"cursor\": \"pointer\"\n      }\n    }, \" ★ \", 10 /* CLASS, PROPS */, _hoisted_4);\n  }), 64 /* STABLE_FRAGMENT */)), $data.selectedRating === null ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"Click to rate\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"label\", null, [_createTextVNode(\" Comments: \"), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.feedback.comments = $event),\n    placeholder: \"Your comments...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.feedback.comments]])]), _hoisted_6], 32 /* NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true), $data.showSuccessAlert ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.closeSuccessAlert && $options.closeSuccessAlert(...args))\n  }, \"×\"), _hoisted_8])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","_createElementVNode","style","type","_createElementBlock","onClick","_cache","$event","$data","showModal","_hoisted_1","_hoisted_2","args","$options","closeModal","_hoisted_3","onSubmit","_withModifiers","submitFeedback","_createTextVNode","_Fragment","_renderList","star","setRating","_normalizeClass","selectedRating","_hoisted_4","_hoisted_5","_createCommentVNode","feedback","comments","placeholder","_hoisted_6","showSuccessAlert","_hoisted_7","closeSuccessAlert","_hoisted_8"],"sources":["/home/wandy/Documents/Technical/frontend/feedback-form/src/components/FeedbackForm.vue"],"sourcesContent":["<template>\n  <div>\n    <button @click=\"showModal = true\">Give Feedback</button>\n\n    <div v-if=\"showModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        <h2>How would you rate your satisfaction with our product?</h2>\n        <form @submit.prevent=\"submitFeedback\">\n          <label>\n            Rating:\n            <span\n              v-for=\"star in 5\"\n              :key=\"star\"\n              @click=\"setRating(star)\"\n              :class=\"{ 'rated': star <= selectedRating }\"\n              style=\"cursor: pointer;\"\n            >\n              ★\n            </span>\n            <span v-if=\"selectedRating === null\" style=\"font-size: 14px; color: #888;\">Click to rate</span>\n          </label>\n          <label>\n            Comments:\n            <textarea v-model=\"feedback.comments\" placeholder=\"Your comments...\"></textarea>\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n\n    <div v-if=\"showSuccessAlert\" class=\"success-alert\">\n      <span class=\"close\" @click=\"closeSuccessAlert\">&times;</span>\n      <p>Feedback submitted successfully!</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      feedback: {\n        rating: null,\n        comments: \"\"\n      },\n      selectedRating: null,\n      showModal: false,\n      showSuccessAlert: false\n    };\n  },\n  methods: {\n    setRating(rating) {\n      this.feedback.rating = rating;\n      this.selectedRating = rating;\n    },\n    async submitFeedback() {\n      try {\n        const response = await fetch(\"/api/feedback/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(this.feedback)\n        });\n        const data = await response.json();\n        console.log(\"Feedback submitted:\", data);\n\n        // Show success alert\n        this.showSuccessAlert = true;\n\n        // Reset form fields after successful submission\n        this.feedback.rating = null;\n        this.feedback.comments = \"\";\n        this.selectedRating = null;\n\n        // Close modal after submission\n        this.showModal = false;\n      } catch (error) {\n        console.error(\"Error submitting feedback:\", error);\n        // Handle error state in your UI\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    closeSuccessAlert() {\n      this.showSuccessAlert = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your scoped styles here */\n.modal {\n  display: block;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgb(0,0,0);\n  background-color: rgba(0,0,0,0.4);\n  padding-top: 60px;\n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 5% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n}\n\n.close {\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.success-alert {\n  position: fixed;\n  z-index: 2;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #4caf50;\n  color: white;\n  padding: 20px;\n  border-radius: 5px;\n}\n\n.success-alert .close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 10px;\n  cursor: pointer;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 10px;\n}\n\ntextarea {\n  width: 100%;\n  height: 100px;\n  resize: vertical;\n}\n\nbutton {\n  margin-top: 10px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nspan {\n  font-size: 24px;\n  cursor: pointer;\n}\n\nspan.rated {\n  color: gold;\n}\n</style>\n"],"mappings":";;;EAAAA,GAAA;EAI0BC,KAAK,EAAC;;;EACrBA,KAAK,EAAC;AAAe;gEAExBC,mBAAA,CAA+D,YAA3D,wDAAsD;mBAPlE;;EAAAF,GAAA;EAoBiDG,KAAqC,EAArC;IAAA;IAAA;EAAA;;gEAMvCD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;EA1BtCJ,GAAA;EA+BiCC,KAAK,EAAC;;gEAEjCC,mBAAA,CAAuC,WAApC,kCAAgC;;uBAhCvCG,mBAAA,CAkCM,cAjCJH,mBAAA,CAAwD;IAA/CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,SAAS;KAAS,eAAa,GAEpCD,KAAA,CAAAC,SAAS,I,cAApBL,mBAAA,CAyBM,OAzBNM,UAyBM,GAxBJT,mBAAA,CAuBM,OAvBNU,UAuBM,GAtBJV,mBAAA,CAAsD;IAAhDD,KAAK,EAAC,OAAO;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,GAAO,GAC/CG,UAA+D,EAC/Dd,mBAAA,CAmBO;IAnBAe,QAAM,EAAAV,MAAA,QAAAA,MAAA,MARrBW,cAAA,KAAAL,IAAA,KAQ+BC,QAAA,CAAAK,cAAA,IAAAL,QAAA,CAAAK,cAAA,IAAAN,IAAA,CAAc;MACnCX,mBAAA,CAYQ,gBArBlBkB,gBAAA,CASiB,WAEL,I,cAAAf,mBAAA,CAQOgB,SAAA,QAnBnBC,WAAA,CAY6B,CAAC,EAATC,IAAI;WADbrB,mBAAA,CAQO;MANJF,GAAG,EAAEuB,IAAI;MACTjB,OAAK,EAAAE,MAAA,IAAEM,QAAA,CAAAU,SAAS,CAACD,IAAI;MACrBtB,KAAK,EAfpBwB,eAAA;QAAA,SAeiCF,IAAI,IAAId,KAAA,CAAAiB;MAAc;MACzCvB,KAAwB,EAAxB;QAAA;MAAA;OACD,KAED,yBAnBZwB,UAAA;kCAoBwBlB,KAAA,CAAAiB,cAAc,a,cAA1BrB,mBAAA,CAA+F,QAA/FuB,UAA+F,EAApB,eAAa,KApBpGC,mBAAA,e,GAsBU3B,mBAAA,CAGQ,gBAzBlBkB,gBAAA,CAsBiB,aAEL,G,gBAAAlB,mBAAA,CAAgF;IAxB5F,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAwB+BC,KAAA,CAAAqB,QAAQ,CAACC,QAAQ,GAAAvB,MAAA;IAAEwB,WAAW,EAAC;iDAA/BvB,KAAA,CAAAqB,QAAQ,CAACC,QAAQ,E,KAEtCE,UAAqC,C,kCA1B/CJ,mBAAA,gBA+BepB,KAAA,CAAAyB,gBAAgB,I,cAA3B7B,mBAAA,CAGM,OAHN8B,UAGM,GAFJjC,mBAAA,CAA6D;IAAvDD,KAAK,EAAC,OAAO;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAsB,iBAAA,IAAAtB,QAAA,CAAAsB,iBAAA,IAAAvB,IAAA,CAAiB;KAAE,GAAO,GACtDwB,UAAuC,C,KAjC7CR,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}